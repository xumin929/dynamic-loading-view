{"version":3,"sources":["webpack:///./src/components-react/BasicBrand/v1.0.0/view/redux/queryData.js","webpack:///./src/components-react/BasicBrand/v1.0.0/view/index.js","webpack:///./src/components-react/BasicBrand/v1.0.0/view/style/basic.less","webpack:///./src/components-react/BasicBrand/v1.0.0/view/BasicBrand.js","webpack:///./src/components-react/BasicBrand/v1.0.0/view/BindBasicBrand.js"],"names":["state","arguments","length","action","type","QUERY_BASE_BRAND_LOADING","_extends3","default","QUERY_BASE_BRAND_SUCCESS","data","result","QUERY_BASE_BRAND_FAIL","error","msg","getShopBrandData","values","url","types","promise","client","get","params","1382","e","a","t","Object","defineProperty","value","n","r","__webpack_require__","__esModule","exports","1501","module","labelWrap","labelTitle","labelCont","labelSelect","brand","brandcn","branden","1502","p","l","d","u","i","s","o","f","_react","h","c","m","Option","_select2","BasicBrand","props","_classCallCheck3","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","changeBrandCh","target","setState","brandNameCh","test","ifBrandNameCh","changeBrandEn","brandNameEn","ifBrandNameEn","handelChange","key","itemTmplPublishVo","JSON","parse","_stringify2","brandId","updateItemTmplAction","handelSelectChange","flag","brandArr","cid","nextProps","categoryId","brandData","_this2","_state","setPlaceholder","placeholder","onChange","map","index","id","num","_react2","createElement","className","_basic2","htmlFor","style","width","item","marginTop","_input2","size","onBlur","marginRight","Component","_reactRedux","_queryData","BindBasicBrand","_inject2","connect","store"],"mappings":"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","file":"34-ce1afae1185196374194.js","sourcesContent":["const QUERY_BASE_BRAND_LOADING = 'QUERY_BASE_BRAND_LOADING';\r\nconst QUERY_BASE_BRAND_SUCCESS = 'QUERY_BASE_BRAND_SUCCESS';\r\nconst QUERY_BASE_BRAND_FAIL = 'QUERY_BASE_BRAND_FAIL';\r\n\r\n\r\nexport default function (state = {}, action = {}) {\r\n    switch (action.type) {\r\n        case QUERY_BASE_BRAND_LOADING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case QUERY_BASE_BRAND_SUCCESS:\r\n            return {\r\n                ...state,\r\n                data: action.result\r\n            };\r\n        case QUERY_BASE_BRAND_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.msg\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//店铺    添加时查询品牌\r\nexport function getShopBrandData(values,type) {\r\n    // shop\r\n    let url = '/shop-service/seller/shopBrand/getAuditBrandByCategoryId';\r\n    // Platform\r\n    if( type == '1'){\r\n        url = '/item/platform/brandController/getBrandByCategoryId';\r\n    }\r\n    return {\r\n        types: [QUERY_BASE_BRAND_LOADING, QUERY_BASE_BRAND_SUCCESS, QUERY_BASE_BRAND_FAIL],\r\n        promise: (client) => client.get(url, {params: values})\r\n    };\r\n}\r\n\r\n\r\n","\r\nimport BindBasicBrand from \"./BindBasicBrand\";\r\nexport default BindBasicBrand;\r\n","// extracted by extract-css-chunks-webpack-plugin\nmodule.exports = {\"labelWrap\":\"_2P5XINel20kBYiAv5YJeMp\",\"labelTitle\":\"_1foarLHLAluVccvQPMmV0T\",\"labelCont\":\"a_nhtMstkrH_tZJGobUY8\",\"labelSelect\":\"_3qL2nZqf5KPlWK0X4lndJY\",\"brand\":\"_3OKFvUu27wQPgj8jQg07_y\",\"brandcn\":\"_19HKktEPQzu8HNa3yEaOps\",\"branden\":\"_1KT8XLHVmvJP3f3iABZ1NS\"};","/**\r\n * @file 发布商品-基础设置- 商品名称\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport { Input,Select,message } from \"jdcloudui\";\r\nOption = Select.Option;\r\nimport styles from \"./style/basic.less\";\r\nimport { getShopBrandData } from \"./redux/queryData\";\r\nimport brandData from \"./redux/queryData\";\r\n\r\nclass BasicBrand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            brandArr: [],\r\n            flag: false,\r\n            ifBrandNameCh: true, //中文品牌名称符合校验规则\r\n            ifBrandNameEn: true, //英文品牌名称符合校验规则\r\n            brandNameCh:null, //中文品牌名称\r\n            brandNameEn:null //英文品牌名称\r\n        };\r\n        this.cid =  this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.cid;\r\n    }\r\n    componentDidMount(){\r\n        // const cid = this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.cid;\r\n        const params = this.props.itemTmplPublishVo;\r\n        if(!params.brandId && params.brandNameEn && params.brandNameCh){\r\n            this.setState({\r\n                flag:true,\r\n                brandNameEn:params.brandNameEn,\r\n                brandNameCh:params.brandNameCh\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.itemTmplPublishVo.cid && nextProps.itemTmplPublishVo.cid !=this.cid){\r\n            this.cid = nextProps.itemTmplPublishVo.cid;\r\n            nextProps.getShopBrandData({categoryId: this.cid},nextProps.type)\r\n        }\r\n\r\n        if(nextProps.brandData && nextProps.brandData.data && nextProps.brandData.data.data){\r\n            if(nextProps.brandData.data.data.length >0 ){\r\n                this.setState({\r\n                    brandArr: nextProps.brandData.data.data\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    //中文品牌名称校验\r\n    changeBrandCh=(e)=>{\r\n        let value = e.target.value;\r\n        this.setState({\r\n            brandNameCh:e.target.value\r\n        })\r\n        let reg = /^[\\u4e00-\\u9fa5]+$/\r\n        if(value && !reg.test(value[0])){\r\n            this.setState({\r\n                ifBrandNameCh : false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ifBrandNameCh : true\r\n            })\r\n        }\r\n    }\r\n    //英文品牌名称校验\r\n    changeBrandEn=(e)=>{\r\n        let value = e.target.value;\r\n        this.setState({\r\n            brandNameEn:e.target.value\r\n        })\r\n        let reg = /^[^\\u4e00-\\u9fa5]+$/;\r\n        if(value && !reg.test(value)){\r\n            this.setState({\r\n                ifBrandNameEn : false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ifBrandNameEn : true\r\n            })\r\n        }\r\n    }\r\n    //保存用户操作数据\r\n    handelChange = (e, key) => {\r\n        const itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n        if(key ==\"brandNameCh\"){\r\n            itemTmplPublishVo.brandId = e.target.value;\r\n        }else if( key == \"brandNameEn\"){\r\n            itemTmplPublishVo.brandId = e.target.value;\r\n        }\r\n        this.props.updateItemTmplAction(itemTmplPublishVo);\r\n    };\r\n    //用户操作更改数据\r\n    handelSelectChange = (key, value) => {\r\n        if(value == 'a999') {\r\n            this.setState({\r\n                flag: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                flag: false\r\n            });\r\n            const itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n            itemTmplPublishVo.brandId = value;\r\n            this.props.updateItemTmplAction(itemTmplPublishVo);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { flag, brandArr } = this.state;\r\n        const params = this.props.itemTmplPublishVo;\r\n        let setPlaceholder = {\r\n            placeholder: '请选择',\r\n            onChange: (value) => this.handelSelectChange('brandId', value)\r\n        };\r\n        if(params.brandId) {\r\n            brandArr.length>0 && brandArr.map((result,index)=>{\r\n                if(result.id == params.brandId ){\r\n                    setPlaceholder.value = result.id;\r\n                }\r\n            })\r\n        } else if(flag) {\r\n            setPlaceholder.value = 'a999';\r\n        } else {\r\n            this.num ++;\r\n        }\r\n\r\n        return (\r\n            <div className={styles.labelWrap}>\r\n                <label htmlFor=\"品牌\" className={styles.labelTitle}>品牌：</label>\r\n                <div className={styles.labelCont}>\r\n                    <Select className=\"\" key={this.num} {...setPlaceholder} style={{width:'100%'}} >\r\n                        {\r\n                            brandArr.map((item, index) => <Option key={index} value={item.id}>{item.brandNameCh ? item.brandNameCh : item.brandNameEn}</Option>)\r\n                        }\r\n                        <Option key={'a999'} value='a999'>其他</Option>\r\n                    </Select>\r\n                    {\r\n                        flag ?\r\n                            <div style={{marginTop: \"15px\"}}>\r\n                                <label>中文名称：</label>\r\n                                <Input placeholder=\"输入品牌中文名称\" size='large' onChange={this.changeBrandCh} onBlur={(e) => this.handelChange(e, 'brandNameCh')} value={this.state.brandNameCh} style={{width: '120px', marginRight: '20px'}}/>\r\n                                <label>英文名称：</label>\r\n                                <Input placeholder=\"输入品牌英文名称\" size='large' onChange={this.changeBrandEn} onBlur={(e) => this.handelChange(e, 'brandNameEn')} value={this.state.brandNameEn} style={{width: '120px'}}/>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                    {\r\n                        flag && (!this.state.ifBrandNameCh || !this.state.ifBrandNameEn) ?\r\n                            <div className={styles.brand}>\r\n                                {!this.state.ifBrandNameCh?<span className={styles.brandcn} >请输入中文品牌</span>:null}\r\n                                {!this.state.ifBrandNameEn?<span className={styles.branden} >请输入英文品牌</span>:null}\r\n                            </div>\r\n                            :null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BasicBrand;\r\n","import { connect } from 'react-redux';\r\nimport brandData, { getShopBrandData } from './redux/queryData';\r\nimport inject from \"../../../../redux/inject\";\r\nimport K from \"./BasicBrand\";\r\n\r\n@inject({ brandData })\r\n@connect(store => ({ brandData: store.brandData }), { getShopBrandData })\r\nexport default class BindBasicBrand extends K {}\r\n"],"sourceRoot":""}