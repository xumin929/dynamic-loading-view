{"version":3,"sources":["webpack:///./src/components-react/ReleaseSaleSpecification/v1.0.0/view/index.js","webpack:///./src/components-react/ReleaseSaleSpecification/v1.0.0/view/getNewDataFun/getNewItemSkuPicVoList.js","webpack:///./src/components-react/ReleaseSaleSpecification/v1.0.0/view/getNewDataFun/getNewItemTmplSkuVoList.js","webpack:///./src/components-react/ReleaseSaleSpecification/v1.0.0/view/ReleaseSaleSpecification.js"],"names":["r","n","__webpack_require__","__esModule","default","e","t","exports","1434","a","1435","Object","defineProperty","value","itemSkuPicVoList","saleAttributeData","combinedSaleAttributeData","array","len","results","indexs","two_array","forEach","attrItem","platformCategoryAttributeValues","attrValueItem","checked","checkedItem","aid","attrId","aName","attrName","vid","attrValueId","vName","attrValueName","push","length","specialSort","start","Array","temp","i","skuAttributesData","item","attributes","newItemlSkuVoList","index","old_index","map","result","_stringify2","url","alt","changeToStrArray","strArr","itemArr","arr","itemObj","sort","toString","itemTmplSkuVoList","combineStrArr","skuStrArr","newItemTmplSkuVoList","skuStrArr_index","indexOf","_extends3","key","specAttributes","desc","skuStatus","_react","m","k","v","b","g","ReleaseSaleSpecification","props","_classCallCheck3","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","_initialiseProps","stateData","getInitStateData","state","nextProps","setState","disabledAttrIds","attrValueArr","_this2","columns","title","dataIndex","width","render","text","record","_state","_state$disabledAttrId","_state$ifSave","ifSave","disabled","_react2","createElement","_checkbox2","onChange","className","_table2","dataSource","pagination","Component","u","ds","JSON","parse","_this3","getDisabledAttrIds","checkedAttrIds","getCheckedAttrIds","target","_message3","error","filter","checkboxItem","updateSaleAttributeAction","itemTmplPublishVo","old_itemTmplSkuVoList","new_itemTmplPublishVo","_getNewItemTmplSkuVoList2","old_itemSkuPicVo","new_itemSkuPicVo","_getNewItemSkuPicVoList2","updateItemTmplAction"],"mappings":"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","file":"14-d6af6ca56f93b8d9df5a.js","sourcesContent":["import ReleaseSaleSpecification from './ReleaseSaleSpecification';\r\nexport default ReleaseSaleSpecification;","/**\r\n * 遍历已选的销售规格数据saleAttributeData，重新组合itemSkuPicVoList数据\r\n * 对比saleAttributeData与itemTmplPublishVo.itemSkuPicVoList\r\n * 不在saleAttributeData里的url ,alt不展示\r\n * @param itemSkuPicVoList ： 已存在sku商品图片\r\n * @param saleAttributeData :  销售规格数据源\r\n * @return 新的图片信息表格数据源\r\n */\r\n\r\nfunction getNewItemSkuPicVoList(itemSkuPicVoList, saleAttributeData) {\r\n    let combinedSaleAttributeData = getCombinedDataFromChecked(saleAttributeData); // 组合已选销售规格数据\r\n    let skuAttributesData = [];\r\n    itemSkuPicVoList.forEach((item) => {\r\n        skuAttributesData.push(item.attributes || []);\r\n    });\r\n    let newItemlSkuVoList = [];\r\n    combinedSaleAttributeData.forEach((item, index) => {\r\n        var old_index = getEqualIndex(skuAttributesData,item);\r\n        if(old_index >=0){\r\n            newItemlSkuVoList.push(itemSkuPicVoList[old_index]);\r\n        }else{\r\n            newItemlSkuVoList.push({\r\n                \"attributes\": combinedSaleAttributeData[index],\r\n                \"url\":\"\",\r\n                \"alt\":\"\"\r\n            });\r\n        }\r\n    });\r\n    return newItemlSkuVoList;\r\n}\r\n/**\r\n//对比选中的销售规格与之前保存的销售规格，并保存下标。\r\n */\r\nfunction  getEqualIndex(skuAttributesData,item){\r\n    let index = -1;\r\n    if(skuAttributesData.length>0) {\r\n        skuAttributesData.length > 0 && skuAttributesData.map((result, i) => {\r\n            if (JSON.stringify(result) == JSON.stringify(item)) {\r\n                index = i;\r\n            }\r\n        })\r\n    }\r\n    return index;\r\n}\r\n/**\r\n * 组合选中的销售规格数据\r\n */\r\nfunction getCombinedDataFromChecked(saleAttributeData) {\r\n    let two_array = [];\r\n    saleAttributeData.forEach((attrItem) => {\r\n        let array = [];\r\n        attrItem.platformCategoryAttributeValues.forEach((attrValueItem) => {\r\n            if (attrValueItem.checked) {\r\n                const checkedItem = {\r\n                    aid: attrItem.attrId,\r\n                    aName: attrItem.attrName,\r\n                    vid: attrValueItem.attrValueId,\r\n                    vName: attrValueItem.attrValueName\r\n                }\r\n                array.push(checkedItem);\r\n            }\r\n        });\r\n        if (array.length > 0) {\r\n            two_array.push(array);\r\n        }\r\n    });\r\n    return doExchange(two_array);\r\n}\r\n/**\r\n * // 二维数组的排列组合\r\n */\r\n\r\nfunction doExchange(doubleArrays) {\r\n    var array = doubleArrays;\r\n    var len = array.length;\r\n    var results = [];\r\n    var indexs = {};\r\n    function specialSort(start) {\r\n        start++;\r\n        if (start > len - 1) {\r\n            return;\r\n        }\r\n        if (!indexs[start]) {\r\n            indexs[start] = 0;\r\n        }\r\n        if (!(array[start] instanceof Array)) {\r\n            array[start] = [array[start]];\r\n        }\r\n        for (indexs[start] = 0; indexs[start] < array[start].length; indexs[start]++) {\r\n            specialSort(start);\r\n            if (start == len - 1) {\r\n                var temp = [];\r\n                for (var i = len - 1; i >= 0; i--) {\r\n                    if (!(array[start - i] instanceof Array)) {\r\n                        array[start - i] = [array[start - i]];\r\n                    }\r\n                    temp.push(array[start - i][indexs[start - i]]);\r\n                }\r\n                results.push(temp);\r\n            }\r\n        }\r\n    }\r\n\r\n    specialSort(-1);\r\n    return results;\r\n}\r\nexport default getNewItemSkuPicVoList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n/**\r\n * 遍历已选的销售规格数据saleAttributeData，重新组合itemTmplSkuVoList数据\r\n * 对比saleAttributeData与itemTmplPublishVo.itemTmplSkuVoList\r\n * 已有的保留，没有的删除，新增的添加\r\n * 超出column列的数据不展示，少于column列的数据默认为空\r\n * @param itemTmplSkuVoList ： 已有sku表格列表\r\n * @param saleAttributeData :  销售规格数据源\r\n * @return 新的销售信息表格数据源\r\n */\r\nfunction getNewItemTmplSkuVoList(itemTmplSkuVoList, saleAttributeData) {\r\n    let combinedSaleAttributeData = getCombinedDataFromChecked(saleAttributeData); // 组合当前已选销售规格数据\r\n    // 遍历旧sku数据，得到其attributes\r\n    let skuAttributesData = [];\r\n    itemTmplSkuVoList.forEach((item) => {\r\n        skuAttributesData.push(item.attributes || []);\r\n    });\r\n\r\n    let combineStrArr = changeToStrArray(combinedSaleAttributeData); // 已选规格数据 转换为 字符串数组\r\n    let skuStrArr = changeToStrArray(skuAttributesData); // 已有sku列表数据 转换为 字符串数组\r\n    \r\n    let newItemTmplSkuVoList = []; // 对比后数据\r\n\r\n    combineStrArr.forEach((item, index) => {\r\n        let skuStrArr_index = skuStrArr.indexOf(item);\r\n        if (skuStrArr_index >= 0) { // sku列表里数据已存在\r\n            newItemTmplSkuVoList.push({\r\n                ...itemTmplSkuVoList[skuStrArr_index],\r\n                \"key\": index\r\n            });\r\n        } else { // 新增数据\r\n            // 规格参数 \r\n            let specAttributes = (combinedSaleAttributeData[index] || []).map((item)=>{\r\n                return {\r\n                    \"aid\": item.aid,\r\n                    \"vid\": item.vid,\r\n                    \"desc\": ''\r\n                }\r\n            });\r\n            newItemTmplSkuVoList.push({\r\n                \"specAttributes\": specAttributes,\r\n                \"attributes\": combinedSaleAttributeData[index],\r\n                \"skuStatus\": 1,\r\n                \"key\": index\r\n            });\r\n        }\r\n    });\r\n\r\n    // 添加默认数据\r\n    if(newItemTmplSkuVoList.length<=0){\r\n        newItemTmplSkuVoList.push({\r\n            \"specAttributes\": null,\r\n            \"attributes\": null,\r\n            \"skuStatus\": 1,\r\n            \"key\": 0\r\n        });\r\n    }\r\n    return newItemTmplSkuVoList;\r\n}\r\n\r\n/**\r\n * 组合选中的销售规格数据\r\n * 销售规格最多只允许选择三种\r\n * @return  = \r\n * [[\r\n *  {\"aName\":\"颜值\",\"aid\":\"175041\",\"desc\":\"\",\"vName\":\"101\",\"vid\":\"330661\"},\r\n *  {\"aName\":\"大小\",\"aid\":\"175041\",\"desc\":\"\",\"vName\":\"101\",\"vid\":\"330661\"}\r\n * ],[\r\n *  {\"aName\":\"颜值\",\"aid\":\"175042\",\"desc\":\"\",\"vName\":\"102\",\"vid\":\"330662\"},\r\n *  {\"aName\":\"大小\",\"aid\":\"175042\",\"desc\":\"\",\"vName\":\"102\",\"vid\":\"330662\"}\r\n * ]]\r\n */\r\nfunction getCombinedDataFromChecked(saleAttributeData) {\r\n    let two_array = [];\r\n\r\n    // 每一种销售规格数据checked的数据组合成一个数组\r\n    saleAttributeData.forEach((attrItem) => {\r\n        let array = [];\r\n        attrItem.platformCategoryAttributeValues.forEach((attrValueItem) => {\r\n            if (attrValueItem.checked) {\r\n                const checkedItem = {\r\n                    aid: attrItem.attrId,\r\n                    aName: attrItem.attrName,\r\n                    vid: attrValueItem.attrValueId,\r\n                    vName: attrValueItem.attrValueName\r\n                }\r\n                array.push(checkedItem);\r\n            }\r\n        });\r\n        if (array.length > 0) {\r\n            two_array.push(array);\r\n        }\r\n    });\r\n    // two_array 二维数组，销售规格最多只允许选择三种，因此 length <= 3\r\n    // two_array = [[{\"aName\":\"颜值\",\"aid\":\"1\",\"desc\":\"\",\"vName\":\"11\",\"vid\":\"11\"},{\"aName\":\"颜值\",\"aid\":\"1\",\"desc\":\"\",\"vName\":\"12\",\"vid\":\"12\"}], [{\"aName\":\"大小\",\"aid\":\"2\",\"desc\":\"\",\"vName\":\"21\",\"vid\":\"22\"}]]\r\n    // two_array = [[{销售规格1+属性值对象}], [销售规格2数组], [销售规格3数组]]\r\n    return doExchange(two_array);\r\n}\r\n/**\r\n * 转换对象二维数组为字符串一维数组\r\n * [[{aid:**, aName:**, vid:**,vName:**},{}],[{},{}]] => ['aid_vid,aid1_vid1','aid2_vid2'];\r\n */\r\nfunction changeToStrArray(array) {\r\n    let strArr = [];\r\n    array.forEach((itemArr) => {\r\n        let arr = [];\r\n        itemArr.forEach((itemObj) => {\r\n            arr.push(`${itemObj.aid}_${itemObj.vid}`);\r\n        });\r\n        strArr.push(arr.sort().toString());\r\n    });\r\n    return strArr;\r\n}\r\n\r\n// 二维数组的排列组合\r\nfunction doExchange(doubleArrays) {\r\n    var array = doubleArrays;\r\n    var len = array.length;\r\n    var results = [];\r\n    var indexs = {};\r\n    function specialSort(start) {\r\n        start++;\r\n        if (start > len - 1) {\r\n            return;\r\n        }\r\n        if (!indexs[start]) {\r\n            indexs[start] = 0;\r\n        }\r\n        if (!(array[start] instanceof Array)) {\r\n            array[start] = [array[start]];\r\n        }\r\n        for (indexs[start] = 0; indexs[start] < array[start].length; indexs[start]++) {\r\n            specialSort(start);\r\n            if (start == len - 1) {\r\n                var temp = [];\r\n                for (var i = len - 1; i >= 0; i--) {\r\n                    if (!(array[start - i] instanceof Array)) {\r\n                        array[start - i] = [array[start - i]];\r\n                    }\r\n                    temp.push(array[start - i][indexs[start - i]]);\r\n                }\r\n                results.push(temp);\r\n            }\r\n        }\r\n    }\r\n\r\n    specialSort(-1);\r\n    return results;\r\n}\r\n\r\nexport default getNewItemTmplSkuVoList;","/**\r\n * @author chenyanhua\r\n * @date 2018-07-26\r\n * @file 销售规格组件\r\n * 逻辑：父组件传递 数据源以及修改数据源的方法\r\n * 当ifSave为false时，表示商品处于发布后状态，那么有数据回显（checked=true）的行可编辑，且必须至少有一个选中项\r\n * 其他行不可编辑\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Table, Checkbox, message } from 'jdcloudui';\r\nimport getNewItemTmplSkuVoList from './getNewDataFun/getNewItemTmplSkuVoList';\r\nimport getNewItemSkuPicVoList from \"./getNewDataFun/getNewItemSkuPicVoList\";\r\nimport './style/index.css';\r\n\r\nexport default class ReleaseSaleSpecification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const stateData = this.getInitStateData(props);\r\n    this.state = { ...stateData };\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    const stateData = this.getInitStateData(nextProps);\r\n    this.setState({\r\n      ...stateData\r\n    });\r\n  }\r\n\r\n  // 设置state值\r\n  getInitStateData = (props) => {\r\n    var ds = props.saleAttributeData || [];\r\n    var saleAttributeData = JSON.parse(JSON.stringify(ds));\r\n    let stateData = {\r\n      ifSave: props.ifSave, // 默认发布前，有\r\n      saleAttributeData: saleAttributeData // 销售规格 数据源\r\n    };\r\n\r\n    // false时，需要设置不可选中项目\r\n    if(!props.ifSave){\r\n      stateData.disabledAttrIds = this.getDisabledAttrIds(saleAttributeData);\r\n    }\r\n\r\n    // 已选的销售规格id\r\n    stateData.checkedAttrIds = this.getCheckedAttrIds(saleAttributeData);\r\n\r\n    return stateData;\r\n  }\r\n  /**\r\n   * 获取已选的attrId\r\n   * 最多只能选择三种属性信息\r\n   */\r\n  getCheckedAttrIds = (saleAttributeData) => {\r\n    let checkedAttrIds = [];\r\n    saleAttributeData.forEach((attrValueArr) => {\r\n      let checked = false;\r\n      attrValueArr.platformCategoryAttributeValues.forEach((attrValueItem) => {\r\n        if(attrValueItem.checked){\r\n          checked = true;\r\n          return;\r\n        }\r\n      });\r\n      if(checked){\r\n        checkedAttrIds.push(attrValueArr.attrId);\r\n      }\r\n    });\r\n    return checkedAttrIds;\r\n  }\r\n\r\n  /**\r\n   * 提供给ifSave为false时使用：需设置不可编辑项目\r\n   * 获取需要设置disabled的attrId数据\r\n   * 剩余的attrId：checked=true时，disabled=true,否则disabld=false\r\n   */\r\n  getDisabledAttrIds(saleAttributeData){\r\n    var disabledAttrIds = [];\r\n    saleAttributeData.forEach((attrValueArr) => {\r\n      let checked = false;\r\n      // 判断是否有checked=true的值\r\n      attrValueArr.platformCategoryAttributeValues.forEach((attrValueItem) => {\r\n        if(attrValueItem.checked){\r\n          checked = true;\r\n          return false;\r\n        }\r\n      });\r\n\r\n      // 该条数据中没有选中的值，则该条数据应该全部 disabled = true\r\n      if(!checked){\r\n        disabledAttrIds.push(attrValueArr.attrId);\r\n      }\r\n    });\r\n\r\n    return disabledAttrIds;\r\n  }\r\n\r\n  /**\r\n   * 将变化的数据保存到数据源里\r\n   * 根据attrId，更新 销售规格 数据源 checked属性\r\n   * 当ifSave = false时，可操作的属性行（有数据回显），必须至少保留一个属性值\r\n   * e.target.value = {\r\n   *  \"attrValueId\":13223,\r\n   *  \"attrId\":10971,\r\n   *  \"attrValueName\":\"R16\",\r\n   *  \"status\":1,\r\n   *  \"checked\": true/false\r\n   * }\r\n   */\r\n  onChange = (e) => {\r\n    // 数据对象\r\n    let value = e.target.value;\r\n    let checked = e.target.checked;\r\n\r\n    let checkedAttrIds = JSON.parse(JSON.stringify(this.state.checkedAttrIds));\r\n\r\n    // 当要选中销售规格属性值时，最多只能选择三种属性信息\r\n    if(checked && checkedAttrIds.indexOf(value.attrId) < 0){\r\n      if(checkedAttrIds.length>=3){\r\n        message.error(\"只能选择三种属性信息\");\r\n        return;\r\n      } else {\r\n        checkedAttrIds.push(value.attrId);\r\n        this.setState({\r\n          checkedAttrIds: checkedAttrIds\r\n        });\r\n      }\r\n    }\r\n\r\n    let saleAttributeData = JSON.parse(JSON.stringify(this.props.saleAttributeData));\r\n\r\n    saleAttributeData.forEach((item) => {\r\n      if(item.attrId == value.attrId){ // 操作的哪行属性\r\n\r\n        // ifSave为false时，可操作的属性行，最少保留一个属性\r\n        if(!this.state.ifSave && !checked){\r\n          let checkedAttr = item.platformCategoryAttributeValues.filter((checkboxItem) => {\r\n            return checkboxItem.checked == true;\r\n          });\r\n          if(checkedAttr.length <= 1){\r\n            message.error(\"至少要保留一种属性信息\");\r\n            return;\r\n          }\r\n        }\r\n\r\n        item.platformCategoryAttributeValues.forEach((checkboxItem) => {\r\n          if(checkboxItem.attrValueId == value.attrValueId) {\r\n            checkboxItem.checked = checked;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // 更新销售规格数据\r\n    this.props.updateSaleAttributeAction(saleAttributeData);\r\n\r\n    let itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n    let old_itemTmplSkuVoList = JSON.parse(JSON.stringify(itemTmplPublishVo.itemTmplSkuVoList));\r\n\r\n    // 新的销售信息表格数据\r\n\r\n    const new_itemTmplPublishVo = getNewItemTmplSkuVoList(old_itemTmplSkuVoList, saleAttributeData);\r\n    itemTmplPublishVo.itemTmplSkuVoList = new_itemTmplPublishVo;\r\n\r\n    //更新图片数据\r\n    const old_itemSkuPicVo = this.props.itemTmplPublishVo.itemSkuPicVoList;\r\n    // 新的图片数据\r\n    const new_itemSkuPicVo = getNewItemSkuPicVoList(old_itemSkuPicVo, saleAttributeData);\r\n    itemTmplPublishVo.itemSkuPicVoList = new_itemSkuPicVo;\r\n\r\n    // 新的销售规格数据\r\n\r\n\r\n    // 更新总数据源\r\n    this.props.updateItemTmplAction(itemTmplPublishVo);\r\n  }\r\n\r\n  render() {\r\n    const columns = [{\r\n      title: '属性名称',\r\n      dataIndex: 'attrName',\r\n      key: 'attrName',\r\n      width: 200\r\n    },{\r\n      title: '属性值',\r\n      key: 'attrValue',\r\n      render: (text, record) => (\r\n        record.platformCategoryAttributeValues.map((item)=>{\r\n          const { disabledAttrIds = [], ifSave = true } = this.state;\r\n          const index = disabledAttrIds.indexOf(record.attrId);\r\n          const disabled = !ifSave && index >=0 ?true:false;\r\n          return (\r\n            <Checkbox value={item} onChange={this.onChange} checked={item.checked} disabled={disabled}>\r\n              {item.attrValueName}\r\n            </Checkbox>\r\n          )\r\n        })\r\n      ),\r\n    }];\r\n    return (\r\n      [\r\n        <h3 className = 'h3-title'>销售规格</h3>,\r\n        <div className = 'table-bordered'>\r\n          <Table\r\n            columns = {columns}\r\n            dataSource = {this.state.saleAttributeData}\r\n            pagination = {false}\r\n          />\r\n        </div>\r\n      ]\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}