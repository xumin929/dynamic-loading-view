{"version":3,"sources":["webpack:///./src/components-react/ReleaseAdvertisingWord/v1.0.0/view/index.js","webpack:///./src/components-react/ReleaseAdvertisingWord/v1.0.0/view/style/index.less","webpack:///./src/components-react/ReleaseAdvertisingWord/v1.0.0/view/ReleaseAdvertisingWord.js"],"names":["t","u","__webpack_require__","__esModule","default","a","e","exports","1463","l","module","labelWrap","labelTitle","labelCont","colorRed","errorTips","labelChildWrap","labelChildTitle","labelChildCont","1478","Object","defineProperty","value","d","T","r","n","o","i","s","f","c","p","h","_react","v","m","b","C","_checkbox2","Group","ReleaseAdvertisingWord","props","_classCallCheck3","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","_initialiseProps","ad","getAdDataSource","state","_extends3","validAdUrl","nextProps","setState","_this2","_state","adUrl","adColor","adText","_react2","createElement","className","_index2","htmlFor","_input2","size","placeholder","onChange","updateAdDataSource","target","style","width","onStateChange","onBlur","_rcColorPicker2","enableAlpha","color","onClose","colors","JSON","parse","_stringify2","itemTmplPublishVo","extendFields","map","item","label","field","_this3","_defineProperty3","test","forEach","updateItemTmplAction"],"mappings":"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","file":"18-53aa5efda7911f014b73.js","sourcesContent":["import ReleaseAdvertisingWord from './ReleaseAdvertisingWord';\r\nexport default ReleaseAdvertisingWord;","// extracted by extract-css-chunks-webpack-plugin\nmodule.exports = {\"labelWrap\":\"_3HZpxWgNPLKJ4tDAsds6z1\",\"labelTitle\":\"zIQy-KRrSUHBz3hgUiOM4\",\"labelCont\":\"gkM0-9f1lnfMeLM1LZ95I\",\"colorRed\":\"_3a9HszC1fTKSGCb93AaTG7\",\"errorTips\":\"_1o8Bn9_4MNI81s0JTycRnA\",\"labelChildWrap\":\"_3Q7n846cGOYuiGffi09--E\",\"labelChildTitle\":\"z7GWKX2QgWEUE0zAv4skW\",\"labelChildCont\":\"_2HhIxuVnLona2KrMjmj4nO\"};","/**\r\n * @author chenyanhua\r\n * @date 2018-08-06\r\n * @file 发布商品-广告词\r\n * 包含字体颜色和链接\r\n * 链接做校验\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Checkbox, Row, Col } from 'jdcloudui';\r\nimport { Input } from 'jdcloudui';\r\nimport 'rc-color-picker/assets/index.css';\r\nimport ColorPicker from 'rc-color-picker';\r\nimport styles from \"./style/index.less\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\nexport default class ReleaseAdvertisingWord extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const ad = this.getAdDataSource(props);\r\n        this.state = {\r\n            ...ad,\r\n            validAdUrl: true // 广告词链接是否有效\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const ad = this.getAdDataSource(nextProps);\r\n        this.setState({\r\n            ...ad\r\n        });\r\n    }\r\n    /**\r\n     * 获取广告词相关数据\r\n     */\r\n    getAdDataSource = (props)=>{\r\n        let extendFields = JSON.parse(JSON.stringify(props.itemTmplPublishVo && props.itemTmplPublishVo.extendFields || []));\r\n        let ad = {\r\n            adText: '', // 广告词\r\n            adUrl:'', // 链接\r\n            adColor: '' // 颜色\r\n        };\r\n        extendFields.map((item)=>{\r\n            if(item.label == 'adText'){\r\n                ad.adText = item.value;\r\n            }\r\n            if(item.label == 'adUrl'){\r\n                ad.adUrl = item.value;\r\n            }\r\n            if(item.label == 'adColor'){\r\n                ad.adColor = item.value;\r\n            }\r\n        });\r\n        return ad;\r\n    }\r\n    render() {\r\n        const { adUrl, adColor, adText } = this.state;\r\n        return (\r\n            <div className={styles.labelWrap}>\r\n                <label htmlFor=\"广告词\" className={styles.labelTitle}>广告词：</label>\r\n                <div className={styles.labelCont}>\r\n                    <Input\r\n                        size=\"large\"\r\n                        placeholder=\"请输入广告词\"\r\n                        value={adText}\r\n                        onChange={(e) => { this.updateAdDataSource('adText', e.target.value); }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className={styles.labelChildWrap}>\r\n                        <label className={styles.labelChildTitle}>链接：</label>\r\n                        <p className={styles.labelChildCont}>\r\n                            <Input\r\n                                size=\"large\"\r\n                                placeholder='(http|https|ftp)://a.b.com'\r\n                                style={{ width: '515px' }}\r\n                                value={adUrl}\r\n                                onChange={(e) => { this.onStateChange('adUrl',e.target.value); }}\r\n                                onBlur={(e) => { this.updateAdDataSource('adUrl', e.target.value); }}\r\n                            />\r\n                        </p>\r\n                        {\r\n                            !this.state.validAdUrl ?\r\n                                <div className={styles.errorTips}>\r\n                                    请输入有效的链接，否则数据不会保存\r\n                                </div> : null\r\n                        }\r\n                    </div>\r\n                    <div className={styles.labelChildWrap}>\r\n                        <label className={styles.labelChildTitle}>颜色：</label>\r\n                        <p className={styles.labelChildCont}>\r\n                            {adColor}\r\n                        </p>\r\n                        <p className={styles.labelChildCont}>\r\n                            <ColorPicker\r\n                                enableAlpha={false}\r\n                                color={adColor}\r\n                                onClose={(colors)=>{ this.updateAdDataSource('adColor', colors.color); }}\r\n                                onChange={(colors) => { this.onStateChange('adColor', colors.color); }}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    /**\r\n     * 更新state\r\n     */\r\n    onStateChange = (field, value) => {\r\n        this.setState({\r\n            [field]: value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 更新数据源\r\n     */\r\n    updateAdDataSource = (field, value) => {\r\n        const reg = /^(((ht|f)tps?):)?\\/\\/([\\w-]+(\\.[\\w-]+)*\\/?)+(\\?([\\w\\-\\.,@?^=%&:\\/~\\+#]*)+)?$/;;\r\n\r\n        // 如果是广告词链接，则作校验\r\n        if (field == 'adUrl') {\r\n            if (reg.test(value)) {\r\n                this.setState({\r\n                    validAdUrl: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    validAdUrl: false\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // 更新广告词 extendFields \r\n        let extendFields = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.extendFields || []));\r\n        extendFields.forEach((item)=>{\r\n            if(item.label == field){\r\n                item.value = value;\r\n            }\r\n        });\r\n\r\n        let itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n        itemTmplPublishVo.extendFields = extendFields;\r\n        this.props.updateItemTmplAction(itemTmplPublishVo);\r\n    }\r\n}\r\n"],"sourceRoot":""}